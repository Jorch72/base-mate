local subpoints = {
	connected = "getConnected",
	numberOfRods = "getNumberOfControlRods",
	energyStored = "getEnergyStored",
	fuelTemperature = "getFuelTemperature",
	caseTemperature = "getCasingTemperature",
	fuelAmount = "getFuelAmount",
	wasteAmount = "getWasteAmount",
	fuelMax = "getFuelAmountMax",
	energyProduced = "getEnergyProducedLastTick",
	hotFluidProduced = "getHotFluidProducedLastTick",
	coolantType = "getCoolantType",
	coolantAmount = "getCoolantAmount",
	coolantMax = "getCoolantAmountMax",
	hotFluidType = "getHotFluidType",
	hotFluidAmount = "getHotFluidAmount",
	hotFluidMax = "getHotFluidAmountMax",
	fuelReactivity = "getFuelReactivity",
	fuelConsumed = "getFuelConsumedLastTick",
	activeCooling = "isActivelyCooled",
}

function new(info)
	local p = point.new(info)
	p.subpoints = {}

	for name, method in pairs(subpoints) do
		local subpoint = point.new({name = name, state = peripheral.call(p.side, method)})
		subpoint.super = p.name
		subpoint.side = info.side
		subpoint.method = method
		subpoint.input = function() return peripiheral.call(subpoint.side, subpoint.method) end
		subpoint.output = function() end
		table.insert(p.subpoints, subpoint)
	end

	do
		--active
		local subpoint = point.new({name = "active", state = peripheral.call(p.side, "isActive")})
		subpoint.super = p.name
		subpoint.side = info.side
		subpoint.input = function() return peripheral.call(subpoint.side, "isActive") end
		subpoint.output = function() return peripheral.call(subpoint.side, "setActive", subpoint.value) end
		table.insert(p.subpoints, subpoint)
	end

	do
		--control rod level
		local subpoint = point.new({name = "controlRodLevel"})
		subpoint.super = p.name
		subpoint.side = info.side
		subpoint.input = function()
			local rodCount = peripheral.call(subpoint.side, "getNumberOfControlRods")
			local total = 0
			for i = 0, rodCount - 1 do
				total = total + peripheral.call(subpoint.side, "getControlRodLevel", i)
			end
			return total / rodCount
		end
		subpoint.output = function() return peripheral.call(subpoint.side, "setAllControlRodLevels", subpoint.value) end
		subpoint.state = subpoint.input()
		subpoint.value = subpoint.state
		table.insert(p.subpoints, subpoint)
	end

	return p
end
